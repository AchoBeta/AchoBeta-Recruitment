<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.achobeta.domain.interview.model.dao.mapper.InterviewMapper">

    <resultMap id="InterviewMap" type="com.achobeta.domain.interview.model.vo.InterviewVO">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="status" column="status" jdbcType="TINYINT"/>
        <association property="scheduleVO" columnPrefix="s_"
                     resultMap="com.achobeta.domain.schedule.model.dao.mapper.InterviewScheduleMapper.ScheduleMap"/>
        <association property="simpleStudentVO" columnPrefix="r_"
                     resultMap="com.achobeta.domain.student.model.dao.mapper.StuResumeMapper.SimpleResumeMap" />
    </resultMap>

    <resultMap id="InterviewDetailMap" extends="InterviewMap" type="com.achobeta.domain.interview.model.vo.InterviewDetailVO">
        <result property="description" column="description" jdbcType="VARCHAR"/>
        <result property="address" column="address" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="managerGetInterviewList" resultMap="InterviewDetailMap">
        select
            -- 面试预约与面试官多对多，在本条 sql 容易出现重复行
            distinct i.id, i.title, i.status, i.description, i.address,
            s.id s_id, s.participation_id s_participation_id, s.start_time s_start_time, s.end_time s_end_time,
            <include refid="com.achobeta.domain.student.model.dao.mapper.StuResumeMapper.Simple_Column_List" />
        from user m
            left join interviewer ir on ir.manager_id = m.id and ir.is_deleted = 0 and m.is_deleted = 0
            left join interview_schedule s on ir.schedule_id = s.id and ir.is_deleted = 0 and s.is_deleted = 0
            left join interview i on i.schedule_id = s.id and i.is_deleted = 0 and s.is_deleted = 0
            left join activity_participation p on p.id = s.participation_id and p.is_deleted = 0 and s.is_deleted = 0
            left join user stu on p.stu_id = stu.id and p.is_deleted = 0 and stu.is_deleted = 0
            left join recruitment_activity a on a.id = p.act_id and p.is_deleted = 0 and a.is_deleted = 0
            left join recruitment_batch b on b.id = a.batch_id and a.is_deleted = 0 and b.is_deleted = 0
            left join stu_resume r on r.batch_id = b.id and r.user_id = stu.id and r.is_deleted = 0 and b.is_deleted = 0 and stu.is_deleted = 0
        <where>
            i.id is not null and m.is_deleted = 0
            <if test="managerId != null">
                and m.id = #{managerId,jdbcType=BIGINT}
            </if>
            <if test="condition.batchId != null">
                and b.id = #{condition.batchId,jdbcType=BIGINT}
            </if>
            <if test="condition.actId != null">
                and a.id = #{condition.actId,jdbcType=BIGINT}
            </if>
        </where>
        order by i.status asc, s.start_time asc, s.end_time asc
    </select>

    <select id="userGetInterviewList" resultMap="InterviewMap">
        select
            i.id, i.title, i.status,
            s.id s_id, s.participation_id s_participation_id, s.start_time s_start_time, s.end_time s_end_time
        from user u
             left join activity_participation p on p.stu_id = u.id and p.is_deleted = 0 and u.is_deleted = 0
             left join interview_schedule s on s.participation_id = p.id and p.is_deleted = 0 and s.is_deleted = 0
             left join interview i on i.schedule_id = s.id and i.is_deleted = 0 and s.is_deleted = 0
             left join recruitment_activity a on a.id = p.act_id and p.is_deleted = 0 and a.is_deleted = 0
             left join recruitment_batch b on b.id = a.batch_id and a.is_deleted = 0 and b.is_deleted = 0
        <where>
            i.id is not null and u.is_deleted = 0
            and u.id = #{userId,jdbcType=BIGINT}
            <if test="condition.batchId != null">
                and b.id = #{condition.batchId,jdbcType=BIGINT}
            </if>
            <if test="condition.actId != null">
                and a.id = #{condition.actId,jdbcType=BIGINT}
            </if>
        </where>
        order by i.status asc, s.start_time asc, s.end_time asc
    </select>

    <select id="getInterviewDetail" parameterType="java.lang.Long" resultMap="InterviewDetailMap">
        select
            i.id, i.title, i.description, i.status, i.address,
            s.id s_id, s.participation_id s_participation_id, s.start_time s_start_time, s.end_time s_end_time,
            <include refid="com.achobeta.domain.student.model.dao.mapper.StuResumeMapper.Simple_Column_List" />
        from interview i
             left join interview_schedule s on i.schedule_id = s.id and i.is_deleted = 0 and s.is_deleted = 0
             left join activity_participation p on p.id = s.participation_id and s.is_deleted = 0 and p.is_deleted = 0
             left join user stu on p.stu_id = stu.id and p.is_deleted = 0 and stu.is_deleted = 0
             left join recruitment_activity a on a.id = p.act_id and p.is_deleted = 0 and a.is_deleted = 0
             left join recruitment_batch b on b.id = a.batch_id and a.is_deleted = 0 and b.is_deleted = 0
             left join stu_resume r on r.batch_id = b.id and r.user_id = stu.id and r.is_deleted = 0 and b.is_deleted = 0 and stu.is_deleted = 0
        where i.id = #{interviewId,jdbcType=BIGINT} and i.is_deleted = 0
    </select>

</mapper>
